{"version":3,"sources":["service/Auth.service.js","components/ui/Navbar.js","service/Match.service.js","components/calendar/calendar.js","components/pages/Index.js","service/Players.service.js","components/players/player-edit.js","components/players/players-card.js","components/players/players-form.js","components/players/players-list.js","components/matchs/match-edit.js","components/matchs/matchs-card.js","components/matchs/matchs-form.js","components/matchs/matchs-list.js","service/PlayerMatch.service.js","components/matchs/match-players.js","components/matchs/players-match.js","components/auth/Signup.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","_service","post","login","logout","loggedin","get","this","axios","create","baseURL","withCredentials","Navigation","props","logoutUser","then","x","setUser","catch","err","console","log","Service","saludo","loggedInUser","Navbar","bg","variant","expand","Brand","href","src","width","height","className","alt","Toggle","aria-controls","Collapse","Nav","Link","as","to","onClick","Text","Component","getAllMatchs","postMatchs","match","MatchEdit","matchID","deleteMatch","Calendar","getAllPlayers","renderDate","dt","setDate","firstDay","toDateString","slice","weekDay","daysOfweek","indexOf","numberOfDays","Date","getFullYear","getMonth","getDate","document","getElementById","innerHTML","months","calendarArrayCopy","state","calendarArray","day","i","length","setState","moveDate","para","setMonth","today","cells","ref","prevRef","id","monthRef","dateRef","nextRef","map","daysRef","Index","class","postPlayers","player","PlayerEdit","playerID","deletePlayer","PlayersEdit","handleSubmit","e","preventDefault","_id","theEditedPlayer","lastName","number","nacionality","age","weight","category","position","skills","dominantLeg","updatePlayersList","data","closeModalWindow","history","push","handleInputChange","target","name","value","PlayersService","buttonText","Form","onSubmit","Group","Label","Control","type","onChange","Button","size","disabled","disabledButton","PlayersCard","handleShow","showModalWindow","handleClose","md","Modal","show","onHide","Header","closeButton","Title","Body","React","PlayersForm","_playersService","playersID","PlayersList","deletePlayerHandler","componentDidMount","allPlayersFromDB","players","Container","Row","idx","key","MatchsEdit","theEditedMatch","goals","clasification","result","season","updateMatchsList","MatchsService","MatchsCard","Col","MatchsForm","_matchsService","MatchsList","deleteMatchHandler","allMatchsFromDB","matchs","getOneMatch","postOneMatch","MatchPlayers","checked","assists","minutePlays","cards","rating","controlId","Check","label","handleCheckBox","PlayersMatch","playerMatchId","params","_playerMatchService","OneMatchFromDB","PlayerMatch","copyTeamPlayer","teamPlayers","index","splice","undefined","playerMatchService","playersService","rival","SignupForm","user","theNewUser","response","message","LoginForm","theLoggedUser","handleToastOpen","handleToastClose","showToast","toastText","text","Toast","onClose","delay","autohide","style","right","bottom","minWidth","App","setTheUser","fetchUser","theLoggedInUserFromTheServer","exact","path","component","render","Signup","Login","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.839a20de.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default class Services {\r\n\r\n    constructor() {\r\n        this._service = axios.create({\r\n            baseURL: 'http://localhost:5000/api/auth',\r\n            withCredentials: true   // RUTAS PERSISTENTES\r\n        })\r\n    }\r\n\r\n    signup = (username, password) => this._service.post('/signup', { username, password })\r\n    login = (username, password) => this._service.post('/login', { username, password })\r\n    logout = () => this._service.post('/logout')\r\n    loggedin = () => this._service.get('/loggedin')\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Service from '../../service/Auth.service'\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new Service()\r\n\r\n    }\r\n\r\n    logoutUser = () => {\r\n        this._service.logout()\r\n            .then(x => this.props.setUser(false))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n\r\n        const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'invitado'\r\n\r\n        return (\r\n\r\n            this.props.loggedInUser ?\r\n\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            src=\"./images/futbol.png\"\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                            alt=\"React Bootstrap logo\"\r\n                        />\r\n                    </Navbar.Brand>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\r\n                            <Nav.Link as=\"li\"><Link to=\"/players\">Jugadores</Link></Nav.Link>\r\n                            <Nav.Link as=\"li\"><Link to=\"/statistics\">Estadisticas</Link></Nav.Link>\r\n                            \r\n                            <Nav.Link as=\"li\" onClick={this.logoutUser}>Logout</Nav.Link>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\">\r\n                            <Navbar.Text>Bienvenid@ {saludo}</Navbar.Text>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                :\r\n\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            src=\"./images/futbol.png\"\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                            alt=\"React Bootstrap logo\"\r\n                        />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse>\r\n                        <Nav className=\"mr-auto\">\r\n                           \r\n                            <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\r\n                            <Nav.Link as=\"li\"><Link to=\"/signup\">Registro</Link></Nav.Link>\r\n                            <Nav.Link as=\"li\"><Link to=\"/login\">Login</Link></Nav.Link>\r\n                            \r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\">\r\n                            <Navbar.Text>Bienvenid@ entrenad@r {saludo}</Navbar.Text>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    \r\n                </Navbar>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import axios from 'axios'\r\n\r\nexport default class Services {\r\n\r\n    constructor() {\r\n        this._service = axios.create({\r\n            baseURL: 'http://localhost:5000/api/matchs',\r\n            withCredentials: true   // RUTAS PERSISTENTES\r\n        })\r\n    }\r\n\r\n    getAllMatchs= () => this._service.get('/getAllMatchs')\r\n    postMatchs = match => this._service.post('/new', match)\r\n\r\n    MatchEdit = (match, matchID) => {\r\n        return this._service.post('/edit', { match, matchID })\r\n    }\r\n    deleteMatch = (matchID) => {\r\n        return this._service.get(`/delete/${matchID}`)\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../calendar/calendar.css';\r\nimport Service from \"../../service/Match.service\"\r\n\r\nexport default class Calendar extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            // dt: new Date()\r\n            calendarArray: [\r\n                \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                \" \", \" \", \" \", \" \", \" \", \" \", \" \"\r\n            ]\r\n        }\r\n        this._service = new Service()\r\n        this.dt = new Date()\r\n        this.today = new Date();\r\n        this.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        this.cells = \"\"\r\n        this.daysOfweek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderDate()\r\n        \r\n     //invocar el metodo creado.\r\n        // this.getAllPlayers()\r\n    }\r\n    // MEtodo para traer de la base de datos todos los partidos. \r\n    //Get All players\r\n    getAllPlayers = () => this._service.get('/getAllPlayers')\r\n\r\n    renderDate = () => {\r\n        this.dt.setDate(1);\r\n        // this.dt.setDate(13)\r\n        const firstDay = this.dt.toDateString().slice(0, 3)\r\n\r\n        const weekDay = this.daysOfweek.indexOf(firstDay)\r\n        const numberOfDays = new Date(this.dt.getFullYear(), this.dt.getMonth() + 1, 0).getDate()\r\n\r\n\r\n        document.getElementById(\"month\").innerHTML = this.dt.toDateString();\r\n        document.getElementById(\"date_str\").innerHTML = this.months[this.dt.getMonth()];\r\n        let calendarArrayCopy = [...this.state.calendarArray]\r\n\r\n        let day = 1\r\n\r\n        for (let i = weekDay; i < calendarArrayCopy.length; i++) {\r\n\r\n            if (day <= numberOfDays) {\r\n                calendarArrayCopy[i] = day\r\n                day++\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({\r\n            calendarArray: calendarArrayCopy\r\n        })\r\n    }\r\n\r\n    moveDate = para => {\r\n\r\n\r\n        if (para == 'prev') {\r\n            this.dt.setMonth(this.dt.getMonth() - 1);\r\n            this.setState({\r\n                calendarArray: [\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \"\r\n                ]\r\n            }, () => this.renderDate())\r\n\r\n        } else if (para == 'next') {\r\n\r\n            this.dt.setMonth(this.dt.getMonth() + 1);\r\n            this.setState({\r\n                calendarArray: [\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n                    \" \", \" \", \" \", \" \", \" \", \" \", \" \"\r\n                ]\r\n            }, () => this.renderDate())\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"calendar\">\r\n                            <div className=\"month\">\r\n                                <div className=\"prev\" ref={this.prevRef} onClick={() => this.moveDate(\"prev\")}>\r\n                                    <span></span>\r\n                                </div>\r\n                                <div>\r\n                                    <h2 id=\"month\" ref={this.monthRef}>December</h2>\r\n                                    <p id=\"date_str\" ref={this.dateRef}></p>\r\n                                </div>\r\n                                <div className=\"next\" ref={this.nextRef} onClick={() => this.moveDate(\"next\")}>\r\n                                    <span></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"weekends\">\r\n                                {this.daysOfweek.map(day => <div>{day}</div>)}\r\n\r\n                            </div>\r\n                            <div id=\"days\" className=\"days\" ref={this.daysRef}>\r\n                                {this.state.calendarArray.map(day => {\r\n                                    return <div>{day}</div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <script src=\"js/calendar.js\"></script> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//ruta post\r\n// en la ruta back tendreis que encontrar dentro de vuestra coleccion de player : buscar por nombre, y luego actualizar enviar el id del partido\r\n\r\n// nombre jugadores y id del partido y hacer un push ","import React from 'react'\r\nimport { Container, Row , } from 'react-bootstrap'\r\nimport Calendar from \"../calendar/calendar\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Index = () => {\r\n\r\n    return (\r\n        <>\r\n            <section class=\"sec1\">\r\n                <h1>Manager App!</h1>\r\n                <p>la app preferida de los entrenadores de futbol</p>\r\n                {/* <img className=\"prueba3\" src=\"./images/imagen5.png\" width=\"30\" height=\"30\"/> */}\r\n                {/* <button type=\"submit\">Día de Partido</button> */}\r\n                <Link  className=\"btn btn-sm btn-dark\" to=\"/match\">Día De Partido</Link>\r\n                <Calendar></Calendar>\r\n            \r\n            </section >\r\n            <section class=\"sec2\">\r\n            <h2>Aqui pondremos otra cosa diferente</h2>\r\n            <p>Es lo que te digo</p>\r\n            </section>\r\n            <section className=\"sec3\">\r\n                <h3>Aqui otra</h3>\r\n                <p>lorem borja ipsum lorem bipsm borja borji borjita bor borjinho bor ipsum</p>\r\n            </section>\r\n            {/* <footer className =\"footer\">\r\n                <p> Imanol</p>\r\n                <p> Borja</p>\r\n            </footer>\r\n        */}\r\n</>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*export default class Calendar extends React.Component {*/\r\n/*state = {\r\n\r\n}*/\r\n\r\n/*constructor(props) {\r\n\r\n}*/\r\n// redireccionar \r\n//setstate : redireccionar a otra vista en esa vista, te vas a traer detalles del partido, ahi, formulario gigante que se puede editar \r\n//boton editar modal: \r\n// datos del partido, esto puede ser un botton ventana modal y poder editar \r\n// seria un botton que te lleva a una ventana modal , en la que se pueda editar los datos que le pasamos al jugador,\r\n// teneis el match, al principio le pasais este string, o otro.\r\n//players que es un array, modelo de player, ya tienes los player dentro del match,\r\n// en vez de <p> mejor input tendreis que tener un botton de crear, para ese formulario. tu aqui, en ronaldo por ejemplo quieres editar propiedades que tiene el player. editar modelo player\r\n\r\n\r\n//esto puede ser un formulario(componente player matchPlayer), eso de por si son inputs,\r\n// este componenten sera un formulario, todo seran inputs, que podreis editar, handleinput, abajo un botton cada carta, añadir jugador, un submit, \r\n// ruta ajustar\r\n// hemos dicho que seran input, crear botton para todos. Si cada tarjeta va a ser un formulario con sus input, tendra un botton que hara la llamada al back\r\n// no tengo jugadores, en vez de etiquetas p, que todo sea input, cada tarjeta un formulario. añadir al equipo pero ya con los datos \r\n// conver handlesubmit, handleinput, tarjeta desaparecer, y añadir arriba desde la base de datos\r\n// botton send cada tarjeta formulario, \r\n\r\n\r\n// input select base de datos, \r\n// \r\nexport default Index\r\n\r\n","import axios from 'axios'\r\n\r\nexport default class Services {\r\n    constructor() {\r\n        this._service = axios.create({\r\n            baseURL: 'http://localhost:5000/api/players',\r\n            withCredentials: true   // RUTAS PERSISTENTES\r\n        })\r\n    }\r\n    getAllPlayers = () => this._service.get('/getAllPlayers')\r\n    postPlayers = player => this._service.post('/new', player)\r\n\r\n    PlayerEdit = (player, playerID) => {\r\n        console.log(player)\r\n        return this._service.post('/edit', { player, playerID })\r\n    }\r\n    deletePlayer = (playerID) => {\r\n        console.log(playerID)\r\n        return this._service.get(`/delete/${playerID}`)\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nimport PlayersService from '../../service/Players.service'\r\n// import FilesService from '../../service/Files.service'\r\n\r\nclass PlayersEdit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new PlayersService()\r\n        // // this._filesService = new FilesService()\r\n        this.state = {\r\n            buttonText: 'editar jugador',\r\n        \r\n            player: {\r\n                name: this.props.player.name,\r\n                lastName: this.props.player.lastName,\r\n                number: this.props.player.number,\r\n                nacionality: this.props.player.nacionality,\r\n                age: this.props.player.age,\r\n                weight: this.props.player.weight,\r\n                category: this.props.player.category,\r\n                position: this.props.player.position,\r\n                skills: this.props.player.skills,\r\n                dominantLeg: this.props.player.dominantLeg,\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        this._service.PlayerEdit(this.state.player, this.props.player._id)\r\n            .then(theEditedPlayer => {\r\n                console.log(theEditedPlayer)\r\n                this.setState({ lastName: '', number: '', nacionality: '', age: '', weight: '', category: '', position: '', skills: '', dominantLeg: ''}, () => this.props.updatePlayersList(theEditedPlayer.data))\r\n                this.props.closeModalWindow()\r\n                this.props.history.push('/player')\r\n            })\r\n\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleInputChange = e => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            player: { ...this.state.player, [name]: value }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" onChange={this.handleInputChange} value={this.state.player.name} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>last Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"lastName\" onChange={this.handleInputChange} value={this.state.player.lastName} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Número</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"number\" onChange={this.handleInputChange} value={this.state.player.number} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Nacionality</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"nacionality\" onChange={this.handleInputChange} value={this.state.player.nacionality} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Age</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"age\" onChange={this.handleInputChange} value={this.state.player.age} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Weight</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"weight\" onChange={this.handleInputChange} value={this.state.player.weight} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control as=\"select\" type=\"text\" name=\"category\" onChange={this.handleInputChange} value={this.state.player.category}>\r\n                        <option>Alevin</option>\r\n                        <option>Infantil</option>\r\n                        <option>Cadete</option>\r\n                        <option>Juvenil</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Position</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"position\" onChange={this.handleInputChange} value={this.state.player.position} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>pierna dominante</Form.Label>\r\n                    <Form.Control as=\"select\" type=\"text\" name=\"dominantLeg\" onChange={this.handleInputChange} value={this.state.player.dominantLeg} >\r\n                        <option>derecha</option>\r\n                        <option>izquierda</option>\r\n                        <option>ambas piernas</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Skills</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"skills\" onChange={this.handleInputChange} value={this.state.player.skills} />\r\n                </Form.Group>\r\n               \r\n                <Button variant=\"dark\" size=\"sm\" type=\"submit\" disabled={this.state.disabledButton}>{this.state.buttonText}</Button>\r\n                \r\n                </Form>\r\n                \r\n        )\r\n        \r\n    }\r\n}\r\nexport default PlayersEdit\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport PlayerEdit from '../players/player-edit'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nclass PlayersCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showModalWindow: false\r\n            \r\n        }\r\n    }\r\n    \r\n    handleShow = () => this.setState({ showModalWindow: true })\r\n    handleClose = () => this.setState({ showModalWindow: false })\r\n    render() {\r\n        console.log(this.state)\r\n        \r\n        return (\r\n                        \r\n            <div md={4}>\r\n                <div className=\"PlayerCard2\">\r\n                    <p>Nombre: {this.props.name}</p>\r\n                    <p>Apellido: {this.props.lastName}</p>\r\n                    <p>Número: {this.props.number}</p>\r\n                    <p>Nacionalidad: {this.props.nacionality}</p>\r\n                    <p>Edad: {this.props.age}</p>\r\n                    <p>Peso: {this.props.weight}<small>Kg</small></p>\r\n                    <p>Categoría: {this.props.category}</p>\r\n                    <p>Posición: {this.props.position}</p>\r\n                    <p>Pierna Dominante: {this.props.dominantLeg}</p>\r\n                    <p>Habilidades Técnicas: {this.props.skills}</p>\r\n                </div>\r\n                \r\n                <div className=\"Buttons\">\r\n                    <Button className=\"ButtonsPl\" variant=\"dark\" onClick={this.handleShow}>Editar jugador</Button>\r\n                    <Button className=\"ButtonsPl\" variant=\"dark\" onClick={() => this.props.deletePlayer(this.props._id)}>Eliminar jugador</Button>\r\n                </div>\r\n               \r\n             \r\n                <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar jugador</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <PlayerEdit player={this.props} updatePlayersList={this.props.updatePlayersList} closeModalWindow={this.handleClose} />\r\n                    </Modal.Body>\r\n                    </Modal>\r\n            </div>\r\n\r\n\r\n            \r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default PlayersCard\r\n","import React, { Component } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nimport PlayersService from '../../service/Players.service'\r\n// import FilesService from '../../service/Files.service'\r\n\r\nclass PlayersForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._playersService = new PlayersService()\r\n        // this._filesService = new FilesService()\r\n        this.state = {\r\n            buttonText: 'Crear nuevo jugador',\r\n            player: {\r\n                name: '',\r\n                lastName: '',\r\n                number: '',\r\n                nacionality: '',\r\n                age: '',\r\n                weight: '',\r\n                category: '',\r\n                position: '',\r\n                skills: '',\r\n                dominantLeg: '',\r\n               \r\n                \r\n            }\r\n        }\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this._playersService.postPlayers(this.state.player)\r\n\r\n            .then(x => {\r\n                const playersID = x.data._id\r\n                this.props.closeModalWindow()\r\n                this.props.updatePlayersList()\r\n                this.props.player.push(`/getAllPlayers${playersID}`)\r\n\r\n            })\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            player: { ...this.state.player, [name]: value }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            // FORMULARIO PARA EL JUGADOR\r\n\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" onChange={this.handleInputChange} value={this.state.player.name} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>last Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"lastName\" onChange={this.handleInputChange} value={this.state.player.lastName} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Número</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"number\" onChange={this.handleInputChange} value={this.state.player.number} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Nacionality</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"nacionality\" onChange={this.handleInputChange} value={this.state.player.nacionality} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Age</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"age\" onChange={this.handleInputChange} value={this.state.player.age} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Weight</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"weight\" onChange={this.handleInputChange} value={this.state.player.weight} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control as=\"select\" type=\"text\" name=\"category\" onChange={this.handleInputChange} value={this.state.player.category}>\r\n                        <option>Alevin</option>\r\n                        <option>Infantil</option>\r\n                        <option>Cadete</option>\r\n                        <option>Juvenil</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Position</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"position\" onChange={this.handleInputChange} value={this.state.player.position} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>pierna dominante</Form.Label>\r\n                    <Form.Control as=\"select\" type=\"text\" name=\"dominantLeg\" onChange={this.handleInputChange} value={this.state.player.dominantLeg} >\r\n                    <option>derecha</option>\r\n                    <option>izquierda</option>\r\n                    <option>ambas piernas</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Skills</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"skills\" onChange={this.handleInputChange} value={this.state.player.skills} />\r\n                </Form.Group>\r\n             \r\n                <Button variant=\"dark\" size=\"sm\" type=\"submit\" disabled={this.state.disabledButton}>{this.state.buttonText}</Button>\r\n                </Form>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default PlayersForm\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Service from '../../service/Players.service'\r\n\r\nimport { Container, Row, Button, Modal } from 'react-bootstrap'\r\n\r\nimport PlayersCard from './players-card'\r\nimport PlayersForm from './players-form'\r\n// import PlayersEdit from './player-edit'\r\n\r\n\r\nclass PlayersList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new Service()\r\n        this.state = {\r\n            players: [],\r\n            // showModalWindow: false\r\n        }\r\n    }\r\n    deletePlayerHandler = id => {\r\n        \r\n            this._service.deletePlayer(id)\r\n            .then(player => console.log(player))\r\n            .catch(err => console.log(\"Error\", err))\r\n             this.updatePlayersList()\r\n    }\r\n\r\n    componentDidMount = () => this.updatePlayersList()\r\n    updatePlayersList = () => {\r\n        this._service.getAllPlayers()\r\n            .then(allPlayersFromDB => this.setState({ players: allPlayersFromDB.data }))\r\n            .catch(err => console.log(\"Error\", err))\r\n    }\r\n    handleShow = () => this.setState({ showModalWindow: true })\r\n    handleClose = () => this.setState({ showModalWindow: false })\r\n    render() {\r\n     \r\n        return (\r\n            <section>\r\n                <Container >\r\n                      \r\n               \r\n                   \r\n                    <h1>aqui los players!!!</h1>\r\n                    \r\n                    \r\n                    {\r\n                        this.props.loggedInUser && <Button variant=\"dark\" onClick={this.handleShow}>Nuevo jugador</Button>\r\n\r\n                    }\r\n                    <Row >\r\n                        {this.state.players.map((player, idx) => <PlayersCard key={player._id} {...player} updatePlayersList={this.updatePlayersList} deletePlayer={this.deletePlayerHandler} />)}\r\n                        </Row>\r\n                    </Container>\r\n                <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Nuevo jugador</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <PlayersForm closeModalWindow={this.handleClose} updatePlayersList={this.updatePlayersList} />\r\n                    </Modal.Body>\r\n                </Modal>\r\n                         \r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default PlayersList\r\n","import React, { Component } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nimport MatchsService from '../../service/Match.service'\r\n// import FilesService from '../../service/Files.service'\r\n\r\nclass MatchsEdit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new MatchsService()\r\n        // // this._filesService = new FilesService()\r\n        this.state = {\r\n            buttonText: 'editar partido',\r\n            // buttonText: 'eliminar jugador',\r\n            match: {\r\n               \r\n                goals: this.props.match.goals,\r\n                clasification: this.props.match.clasification,\r\n                match: this.props.match.match,\r\n                result: this.props.match.result,\r\n                season: this.props.match.season,\r\n              \r\n               \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        this._service.MatchEdit(this.state.match, this.props.match._id)\r\n            .then(theEditedMatch => {\r\n                console.log(theEditedMatch.data )\r\n                this.setState({ goals: '', clasification: '', match: '', result: '', season: '' }, () => this.props.updateMatchsList(theEditedMatch.data))\r\n                this.props.closeModalWindow()\r\n                this.props.history.push('/match')\r\n            })\r\n\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleInputChange = e => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            match: { ...this.state.match, [name]: value }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Goles</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"goals\" onChange={this.handleInputChange} value={this.state.match.goals} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Clasificación</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"clasification\" onChange={this.handleInputChange} value={this.state.match.clasification} />\r\n                </Form.Group>\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Partido</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"match\" onChange={this.handleInputChange} value={this.state.match.match} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Resultado</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"result\" onChange={this.handleInputChange} value={this.state.match.result} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Temporada</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"season\" onChange={this.handleInputChange} value={this.state.match.season} />\r\n                </Form.Group>\r\n              \r\n                <Button variant=\"dark\" size=\"sm\" type=\"submit\" disabled={this.state.disabledButton}>{this.state.buttonText}</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default MatchsEdit\r\n","import React from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport MatchsEdit from '../matchs/match-edit'\r\n\r\n// import { Link } from 'react-router-dom'\r\n\r\nclass MatchsCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showModalWindow: false\r\n\r\n        }\r\n    }\r\n   \r\n\r\n    handleShow = () => this.setState({ showModalWindow: true })\r\n    handleClose = () => this.setState({ showModalWindow: false })\r\n    render() {\r\n\r\n        return (\r\n            <Col className=\"match-card\">\r\n                <p>Jugadores: {this.props.category}</p>\r\n                <p>Goals: {this.props.goals}</p>\r\n                <p>Clasificación: {this.props.clasification}</p>\r\n                <p>Partido: {this.props.match}</p>\r\n                <p>Resultado: {this.props.result}</p>\r\n                <p>Season: {this.props.season}</p>\r\n                <br></br>\r\n                <div>\r\n                <Button className=\"Buttons\" variant=\"dark\" onClick={this.handleShow}>Editar partido</Button>    \r\n                <Button className=\"Buttons\" variant=\"dark\" onClick={() => this.props.deleteMatch(this.props._id)}>Eliminar partido</Button>\r\n                </div>\r\n               \r\n\r\n                <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar partido</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <MatchsEdit match={this.props} updateMatchsList={this.props.updateMatchsList} closeModalWindow={this.handleClose} />\r\n                        {/* <deletePlayerplayer={this.props} updatePlayersList={this.props.updatePlayersList} closeModalWindow={this.handleClose} /> */}\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n\r\n\r\n            </Col>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default MatchsCard\r\n","import React, { Component } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nimport MatchsService from '../../service/Match.service'\r\n\r\nclass MatchsForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._matchsService = new MatchsService()\r\n        this.state = {\r\n            buttonText: 'Crear nuevo partido',\r\n            match: {\r\n                goals: '',\r\n                clasification: '',\r\n                match: '',\r\n                result: '',\r\n                season: '',\r\n                players: []\r\n\r\n            }\r\n        }\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this._matchsService.postMatchs(this.state.match)\r\n\r\n            .then(x => {\r\n                console.log(x.data)\r\n                const matchID = x.data._id\r\n                this.props.closeModalWindow()\r\n                this.props.updateMatchsList()\r\n                this.props.match.push(`/playersMatch/${matchID}`)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            match: { ...this.state.match, [name]: value }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            // FORMULARIO PARA EL JUGADOR\r\n            <Form onSubmit={this.handleSubmit}>\r\n                {/* <Form.Group>\r\n                    <Form.Label>Goles</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"goals\" onChange={this.handleInputChange} value={this.state.match.goals} />\r\n                </Form.Group> */}\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Clasificación</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"clasification\" onChange={this.handleInputChange} value={this.state.match.clasification} />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Partido</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"match\" onChange={this.handleInputChange} value={this.state.match.match} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Resultado</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"result\" onChange={this.handleInputChange} value={this.state.match.result} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Temporada</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"season\" onChange={this.handleInputChange} value={this.state.match.season} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"dark\" size=\"sm\" type=\"submit\" disabled={this.state.disabledButton}>{this.state.buttonText}</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nexport default MatchsForm","import React from 'react'\r\nimport Service from '../../service/Match.service'\r\n\r\nimport { Container, Row, Button, Modal } from 'react-bootstrap'\r\n\r\nimport MatchsCard from './matchs-card'\r\nimport MatchsForm from './matchs-form'\r\nimport MatchsEdit from './match-edit'\r\n\r\n\r\nclass MatchsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new Service()\r\n        this.state = {\r\n            matchs: [],\r\n            showModalWindow: false\r\n        }\r\n    }\r\n    deleteMatchHandler = id => {\r\n\r\n        this._service.deleteMatch(id)\r\n            .then(match => console.log(match))\r\n            .catch(err => console.log(\"Error\", err))\r\n        this.updateMatchsList()\r\n    }\r\n\r\n    componentDidMount = () => this.updateMatchsList()\r\n    updateMatchsList = () => {\r\n        this._service.getAllMatchs()\r\n            .then(allMatchsFromDB => this.setState({ matchs: allMatchsFromDB.data }))\r\n            .catch(err => console.log(\"Error\", err))\r\n    }\r\n    handleShow = () => this.setState({ showModalWindow: true })\r\n    handleClose = () => this.setState({ showModalWindow: false })\r\n    render() {\r\n\r\n        return (\r\n            <section>\r\n                <Container>\r\n                    <h1>aqui los partidos!!!</h1>\r\n\r\n                    {\r\n                        this.props.loggedInUser && <Button variant=\"dark\" onClick={this.handleShow}>Nuevo partido</Button>\r\n\r\n                    }\r\n                    <Row>\r\n                        {this.state.matchs.map((match, idx) => <MatchsCard key={match._id} {...match} updateMatchsList={this.updateMatchsList} deleteMatch={this.deleteMatchHandler} />)}\r\n\r\n                    </Row>\r\n                </Container>\r\n                    <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Nuevo partido</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <MatchsForm match={this.props.history} closeModalWindow={this.handleClose} updateMatchsList={this.updateMatchsList} />\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default MatchsList\r\n","import axios from 'axios'\r\n\r\nexport default class Services {\r\n    constructor() {\r\n        this._service = axios.create({\r\n            baseURL: 'http://localhost:5000/api/matchs/playersMatch',\r\n            withCredentials: true   // RUTAS PERSISTENTES\r\n        })\r\n    }\r\n    // getOneMatch = () => this._service.get('/getOneMatch')\r\n    getOneMatch = id => {\r\n        console.log(id)\r\n        return this._service.get(`/${id}`)\r\n    }\r\n    postOneMatch = (players, matchID) => this._service.post(`/editMatch`, { players, matchID })\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\r\n\r\n\r\n//EDITAR ESTA PARTE\r\n\r\nclass MatchPlayers extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            checked: false\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n\r\n\r\n            <Col className=\"PlayerCard\" md={2} >\r\n\r\n                <p><strong>Nombre: </strong>{this.props.name}</p>\r\n                <p><strong>Apellido:</strong>{this.props.lastName}</p>\r\n                <p><strong>Goles: </strong> {this.props.goals}</p>\r\n                <p><strong>Asistencias: </strong> {this.props.assists}</p>\r\n                <p><strong>Asistencias: </strong> {this.props.assists}</p>\r\n                <p><strong>Minutos Jugados: </strong> {this.props.minutePlays}</p>\r\n                <p><strong>Tarjetas: </strong> {this.props.cards}</p>\r\n                <p><strong>Puntuación: </strong> {this.props.rating}</p>\r\n                <div>\r\n                    {/* <InputGroup className=\"mb-3\">\r\n                        <p><strong>Añadir al partido: </strong></p>\r\n                    <InputGroup.Checkbox aria-label={this.props.titular} /> */}\r\n                    {/* <div>\r\n                        <Button className=\"ButtonsMatch\" variant=\"dark\" onClick={this.handleShow}>Editar jugador</Button>\r\n                    </div>     */}\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"titular\" value={this.state.checked} name={this.props._id} onChange={(e) => this.props.handleCheckBox(e.target.checked, this.props._id)} />\r\n                    </Form.Group>\r\n\r\n\r\n                    {/* <input type=\"checkbox\" label=\"titular\" value={this.props.checked} name={this.props.name} onChange={this.handleCheckBox}></input> */}\r\n\r\n                </div>\r\n\r\n            </Col>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MatchPlayers\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\n// import Service from '../../service/PlayerMatch.service'\r\n\r\n//NO OLVIDEMOS QUE PODEMOS IMPORTAR VARIOS SERVICIOS!!!!!!!!!!\r\nimport playersService from '../../service/Players.service'\r\nimport playerMatchService from '../../service/PlayerMatch.service'\r\nimport MatchPlayers from \"../matchs/match-players\"\r\n\r\n\r\n\r\nclass PlayersMatch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            PlayerMatch: undefined,\r\n            players: [],\r\n            checked: false,\r\n            teamPlayers: []\r\n        }\r\n        this._playerMatchService = new playerMatchService()\r\n        this._playersService = new playersService()\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.updateMatchsList()\r\n        this.updatePlayersList()\r\n    }\r\n\r\n    updateMatchsList = () => {\r\n        const playerMatchId = this.props.match.params.id\r\n        this._playerMatchService.getOneMatch(playerMatchId)\r\n            .then(OneMatchFromDB => {\r\n                console.log(OneMatchFromDB)\r\n                this.setState({ PlayerMatch: OneMatchFromDB.data })\r\n            })\r\n            .catch(err => console.log(\"Error\", err))\r\n    }\r\n\r\n    updatePlayersList = () => {\r\n        this._playersService.getAllPlayers()\r\n            .then(allPlayersFromDB => this.setState({ players: allPlayersFromDB.data }))\r\n            .catch(err => console.log(\"Error\", err))\r\n\r\n    }\r\n\r\n\r\n    handleCheckBox = (checked, playerID) => {\r\n        // e.preventDefault()\r\n        console.log(\"ENTRAAAs\")\r\n        console.log(checked)\r\n        console.log(playerID)\r\n        const copyTeamPlayer = [...this.state.teamPlayers]\r\n        if (checked) {\r\n            copyTeamPlayer.push(playerID)\r\n            this.setState({ teamPlayers: copyTeamPlayer })\r\n        } else {\r\n            let index = copyTeamPlayer.indexOf(playerID)\r\n            copyTeamPlayer.splice(index, 1)\r\n            this.setState({ teamPlayers: copyTeamPlayer })\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state.teamPlayers, this.props.match.params.id)\r\n\r\n        this._playerMatchService.postOneMatch(this.state.teamPlayers, this.props.match.params.id)\r\n            .then(match => {\r\n                console.log(match.data)\r\n                console.log(this.state.PlayerMatch)\r\n                this.setState({\r\n                    PlayerMatch: match.data\r\n                })\r\n\r\n\r\n            })\r\n            .catch(err => console.log(err))\r\n        //enviar al back el ID del partido que estamos configurando y el state- \r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(this.state.PlayerMatch)\r\n        console.log(this.state.PlayerMatch)\r\n        return this.state.PlayerMatch ? (\r\n            <>\r\n                <div className=\"Match\">\r\n                    <p>PARTIDO</p>\r\n\r\n                    {/* <p>goles: {this.state.PlayerMatch.goals}</p> */}\r\n                    <p>clasificación: {this.state.PlayerMatch.clasification}</p>\r\n\r\n                    {this.state.PlayerMatch.players.length !== 0 ?\r\n                        // console.log(this.state.PlayerMatch)\r\n                        // console.log(\"ENTRAAAA\")\r\n\r\n                        this.state.PlayerMatch.players.map(player => {\r\n\r\n                            return (\r\n                                <p>{player.name}</p>\r\n                            )\r\n                        })\r\n                        : <p>NO TIENES JUGADORES</p>\r\n\r\n                    }\r\n\r\n                    <p>team: {this.state.PlayerMatch.match}</p>\r\n                    <p>equipo rival: {this.state.PlayerMatch.rival}</p>\r\n                    <p>jornada: {this.state.PlayerMatch.season}</p>\r\n                </div>\r\n                <div>\r\n                    {this.state.PlayerMatch.players.length === 0 ?\r\n                        this.state.players.map(player =>\r\n\r\n\r\n                            <MatchPlayers {...player} checked={this.state.checked} handleCheckBox={this.handleCheckBox}></MatchPlayers>\r\n\r\n                        ) :\r\n                        null}\r\n                    {this.state.PlayerMatch.players.length === 0 ?\r\n                        <>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Button variant=\"dark\" size=\"sm\" type=\"submit\" >Carear </Button>\r\n                            </Form>\r\n                        </>\r\n                        : null}\r\n                </div>\r\n            </>\r\n\r\n\r\n\r\n\r\n        ) : \"HOLI\"\r\n    }\r\n}\r\n\r\nexport default PlayersMatch\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Container } from 'react-bootstrap'\r\n\r\nimport Service from '../../service/Auth.service'\r\n\r\nclass SignupForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new Service()\r\n        this.state = {user:{ username: '', password: '' }}\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { username, password } = this.state.user\r\n        this._service.signup(username, password)\r\n            .then(theNewUser => {\r\n                console.log(\"aqui\", theNewUser.data)\r\n                this.props.setUser(theNewUser.data)\r\n                this.setState({ username: '', password: '' })\r\n                this.props.history.push('/')  // IMPORTANTE !!!!!!!! SIRVE PARA REDIRIGIR A OTRA PAGINA\r\n            })\r\n            .catch(err => console.log(err.response.data.message))\r\n    }\r\n\r\n\r\n    handleInputChange = e => {\r\n        let { name, value } = e.target\r\n        this.setState({ user: { ...this.state.user, [name]: value }})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n\r\n                <h1>Registro</h1>\r\n\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Usuario</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Contraseña</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\r\n                </Form>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignupForm","import React, { Component } from 'react'\r\nimport { Button, Form, Container, Toast } from 'react-bootstrap'\r\n\r\nimport Service from '../../service/Auth.service'\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this._service = new Service()\r\n        this.state = {\r\n            showToast: false,\r\n            toastText: '',\r\n            user: { username: '', password: '' }\r\n        }\r\n    }\r\n\r\n\r\n    handleInputChange = e => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            user: { ...this.state.user, [name]: value }\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { username, password } = this.state.user\r\n        this._service.login(username, password)\r\n            .then(theLoggedUser => {\r\n                this.props.setUser(theLoggedUser.data)\r\n                this.setState({ username: '', password: '' })\r\n                this.props.history.push('/')  // IMPORTANTE !!!!!!!! SIRVE PARA REDIRIGIR A OTRA PAGINA\r\n\r\n        // REDIRECCIONAMIENTO\r\n            })\r\n            .catch(err => {\r\n                this.handleToastOpen(err.response.data.message)\r\n            })\r\n    }\r\n\r\n    handleToastClose = () => this.setState({ showToast: false, toastText: '' })\r\n    handleToastOpen = text => this.setState({ showToast: true, toastText: text })\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n\r\n                <h1>Iniciar sesión</h1>\r\n\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Usuario</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Contraseña</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\r\n                </Form>\r\n\r\n                <Toast\r\n                    onClose={this.handleToastClose}\r\n                    show={this.state.showToast}\r\n                    delay={3000}\r\n                    autohide\r\n                    style={{\r\n                        position: 'fixed',\r\n                        right: '10px',\r\n                        bottom: '10px',\r\n                        minWidth: '250px'\r\n                    }}>\r\n                    <Toast.Header>\r\n                        <strong className=\"mr-auto\">Error</strong>\r\n                        <small>Session manager</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{this.state.toastText}</Toast.Body>\r\n                </Toast>\r\n\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LoginForm","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Service from './service/Auth.service'\r\n\r\n/* CUSTOM UI COMPONENTS */\r\nimport Navbar from './components/ui/Navbar'\r\n\r\n/* CUSTOM PAGE COMPONENTS */\r\nimport Index from './components/pages/Index'\r\nimport PlayersList from './components/players/players-list'\r\nimport PlayersForm from './components/players/players-form'\r\nimport PlayerEdit from './components/players/player-edit'\r\nimport MatchsList from './components/matchs/matchs-list'\r\nimport MatchsForm from './components/matchs/matchs-form'\r\nimport MatchsEdit from './components/matchs/match-edit'\r\nimport PlayersMatch from \"./components/matchs/players-match\"\r\nimport MatchPlayers from \"./components/matchs/match-players\"\r\n/* CUSTOM AUTH COMPONENTS */\r\nimport Signup from './components/auth/Signup'\r\nimport Login from './components/auth/Login'\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = { loggedInUser: null }\r\n    this._service = new Service()\r\n  }\r\n\r\n  setTheUser = user => {\r\n    this.setState({ loggedInUser: user })\r\n    console.log(\"El método 'setTheUser' de App.js se ha invocado, pasando al estado 'loggedInUser:\", this.state.loggedInUser)\r\n  }\r\n\r\n  fetchUser = () => {\r\n\r\n    if (this.state.loggedInUser === null) {\r\n      this._service.loggedin()\r\n        .then(theLoggedInUserFromTheServer => this.setState({ loggedInUser: theLoggedInUserFromTheServer.data }))\r\n        .catch(err => {\r\n          this.setState({ loggedInUser: false })\r\n          console.log({ err })\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    this.fetchUser()\r\n    console.log(this.state.loggedInUser)\r\n    return (\r\n      <>\r\n        <Navbar loggedInUser={this.state.loggedInUser} setUser={this.setTheUser} />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Index} />\r\n\r\n\r\n          <Route path=\"/signup\" render={match => <Signup setUser={this.setTheUser} {...match} />} />\r\n          <Route path=\"/login\" render={match => <Login setUser={this.setTheUser} {...match} />} />\r\n          {/* RUTAS DE PLAYERS */}\r\n          <Route exact path=\"/formPlayers\" component={PlayersForm} />\r\n          <Route path=\"/players\" render={() => this.state.loggedInUser ? <PlayersList loggedInUser={this.state.loggedInUser} /> : null} />\r\n\r\n          {/* RUTAS DE PARTIDOS */}\r\n          <Route exact path=\"/formMatchs\" component={MatchsForm} />\r\n          <Route path=\"/match\" render={match => this.state.loggedInUser ? <MatchsList {...match} loggedInUser={this.state.loggedInUser} /> : null} />\r\n          <Route path=\"/playersMatch/:id\" render={match => this.state.loggedInUser ? <PlayersMatch {...match} loggedInUser={this.state.loggedInUser} /> : null} />\r\n          <Route path=\"/matchPlayers/:id\" render={match => this.state.loggedInUser ? <MatchPlayers {...match} loggedInUser={this.state.loggedInUser} /> : null} />\r\n\r\n\r\n        </Switch>\r\n\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <Router>\r\n    \r\n        <App />\r\n    </Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}